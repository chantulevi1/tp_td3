2. 
Editor.h debe cumplir:
string texto solo tiene letras minusculas/espacios sin comas, signos de puntuacion, sin mayusculas, sin Ã±
La cantidad de elementos del conjunto conectivos debe ser mayor o igual a 0. 
el numero longitud es igual a la cantidad de palabras que hay en el vector _texto y debe mayor o igual a 0.
vocabulario son palabras que pertenecen a _texto pero no a conectivos
Todos los strings de _posiciones pertenecen al vector _texto
pos es una posicion valida de _texto
el numero de conteo_palabras es igual a la cantidad de elementos de vocabulario
la cantidad de elementos de _posiciones es mayor o igual a 0
la cantidad de caracteres del string texto es mayor o igual a 0
la cantidad de elementos del vector _texto es mayor o igual a 0
Todos los valores asociados a una clave de _posiciones, son posiciones del vector _texto donde se encuntran las palabras de _posiciones
Todos los elementos del vector _texto son substrings del string texto
3.
(forall int:i)(0<i<| texto|)(exists k:int)(0<k<|alfabeto|)(alfabeto[k]==texto[i]) 
alfabeto= {a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,q,r,s,t,u,v,w,x,y,z' ',}
 |conectivos| >= 0 
 longitud = |_texto| >= 0 
 (forall i: int)(0<i<=|vocabulario|)(exists j)(0<j<|_texto|) and (vocabulario[i]=_texto[j]) and perteneceA(s: vocabulario.[i], conectivos)=false
perteneceA(s:vector<char>, set<string> conectivos)=
(exists i:int,j:int)and(B(conectivos[i][j]==s[j]))=1
 (forall i: int) (0<i<|_posiciones|) (exists j)(0<j< |_texto|) and (_posiciones.key[i]=_texto[j])
 0 <= pos < _texto.size()
 _conteo_palabras = |vocabulario| >= 0 
 |_texto| >= 0
 |texto| >= 0
 |_posiciones| >= 0 
 (forall i: int)(0<i<|_texto|)(exists _posiciones.key) and (_texto[i] = _posiciones.key) 
 and (forall j: int in set<values>)(exists _texto[j]) 
(forall i: int )(0<i<|_texto|)(esSubStr(texto, _texto[i])=true)
esSubStr(string s1:longstring, string s2:smallString)=
(forall j:int exists k: int)(0<j<|smallString|-1) and B(s2[j]==s1[k])=true and B(s2[j]+1==s1[k]+1)


 Ejemplo que cumple: 
 texto = "pedido de limpieza de vereda en la ciudad"
 _texto = {pedido; de ; limpieza ; ; de; vereda ; en ; la ; ciudad}
 _posiciones = [{pedido, 0} ; {de , {1,3}} ; {limpieza, 2} ; {vereda, 4} {en, 5}; {la, 6}; {ciudad, 7}]
 conectivos = {"de", "para", "y" , "en" , "la"}
 vocabulario = {"pedido" ; "limpieza" ; "vereda" ; "ciudad"}
 longitud = 8
 conteo_palabras = 4
 pos = 4

 
Ejemplo que no cumple:
texto = "resumen capa de enlace" 
_texto = {"arbusto", "capa", "de", "enlace"}
_posiciones = [{resumen, 0}; {capa, 1}; {de,2}; {enlace, 3}]
conectivos = "de"
vocabulario = {"cami" ; "agustin" , "gervasio"; "valen"} 
longitud = -8
conteo_palabras = 4
pos = 19